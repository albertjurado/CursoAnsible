# Este es mi fichero de playbook
--- # Crear un nuevo play
# Contra quien opero
- hosts: ubuntu01 # Se puede poner la ip o hostname o poner all y cojera todos los hosts del fichero inventario1.yml

# Opciones de conexion
  remote_user: root
  order: inventory # reverse_inventory | sorted | reverse-sorted | shuffle

# Ansible va ejecutando los tasks de manera secuencial pero en paralelo sobre diferentes entornos
# Por defecto lo hace de 5 en 5
    
# Variables TODO
  vars:
        variable1: Hola amigo!!
        variable2: 22
        variable3:
            subvalor1: 1
            subvalor2: 2
    
# Comienza la difinicion de las tareas
  tasks:

    # Comienza UNA tarea
    - name: Mi primera tarea
      debug:
            # Si quiero usar variables, uso doble llave y el texto entre comillas
            msg: "{{ variable1 }} voy a comenzar una tarea"    # Comienza UNA tarea
    
    # Comienza OTRA tarea       
    - name: Mi segunda tarea
      debug:
            # !unsafe  evita que un texto se procese por JINJA !
    
    # Comienza OTRA tarea       
    - name: Mi tercera tarea
      debug:
            msg: "{{ variable1 }} voy a comenzar la tarea {{ numerotarea }}, en el servidor {{ sistema }} {{ sistema2 }}"
      # Puedo definir variables a nivel de tareas
      vars:
            numerotarea: 3
        
    # Comienza OTRA tarea con variables de diccionario    
    - name: Mi cuarta tarea
      debug:
            # el > te permite escribir el mensaje de salida en varias lineas. 
            msg: >  
                "Valores del diccionario {{ variable3.subvalor1 }}"
                "Valores del diccionario {{ variable3.subvalor2 }}"
                
    # Comienza una tarea para obtener los facts  
    - name: Mi tarea de facts
      debug:
            msg: "He entrado !!!"
    #   var: ansible_facts.dns.nameservers[0]
    #   var: ansible_facts.distribution['dns'].nameservers[0]
    
    # when: ansible_facts.distribution == 'Ubuntu' and variable2 == 22           Es lo mismo pero en una linea todo
      when:  # Esta sintaxis es un AND encubierto
        - ansible_facts.distribution == 'Ubuntu'
        - variable2 == 22
    
      # Una tarea normalita  
    - name: Mi tarea normalita
      debug:
            msg: "Me ejecuto normalmente"
      changed_when: False
      notify: tarea opcional
      
      # Una tarea normalita 2
    - name: Mi tarea normalita 2
      debug:
            msg: "Me ejecuto normalmente 2"
      changed_when: True
      notify: mievento
      
  
      
      
      
      
      
      
      
      
    
  handlers:
        #Una tarea opcional
        - name: tarea opcional
          debug:
                msg: "Me ejecuto opcionalmente"
          listen: mievento  
                
        #Una tarea opcional 2 
        - name: tarea opcional 2
          debug:
                msg: "Me ejecuto opcionalmente 2"
          listen: mievento